name: Cleanup Deployments

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'

permissions:
  deployments: write

jobs:
  cleanup:
    name: Cleanup Old Deployments
    runs-on: ubuntu-latest
    
    steps:
    - name: Cleanup test-pypi deployments
      uses: actions/github-script@v7
      with:
        script: |
          const environment = 'test-pypi';
          const daysToKeep = 7;
          const cutoffDate = new Date();
          cutoffDate.setDate(cutoffDate.getDate() - daysToKeep);
          
          console.log(`Cleaning up ${environment} deployments older than ${cutoffDate.toISOString()}`);
          
          // Get all deployments for the environment
          const deployments = await github.paginate(
            github.rest.repos.listDeployments,
            {
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: environment,
              per_page: 100
            }
          );
          
          console.log(`Found ${deployments.length} deployments in ${environment}`);
          
          // Filter old deployments
          const oldDeployments = deployments.filter(d => 
            new Date(d.created_at) < cutoffDate
          );
          
          console.log(`Found ${oldDeployments.length} old deployments to clean up`);
          
          // Mark old deployments as inactive
          for (const deployment of oldDeployments) {
            try {
              // First check current status
              const statuses = await github.rest.repos.listDeploymentStatuses({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id
              });
              
              const latestStatus = statuses.data[0];
              
              // Only update if not already inactive
              if (!latestStatus || latestStatus.state !== 'inactive') {
                await github.rest.repos.createDeploymentStatus({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id,
                  state: 'inactive',
                  description: 'Deployment expired and marked inactive by cleanup job'
                });
                
                console.log(`Marked deployment ${deployment.id} as inactive`);
              }
            } catch (error) {
              console.error(`Failed to update deployment ${deployment.id}: ${error.message}`);
            }
          }
          
          console.log('Cleanup completed');
    
    - name: Mark any failed deployments as inactive
      uses: actions/github-script@v7
      with:
        script: |
          const environments = ['test-pypi', 'pypi'];
          
          for (const environment of environments) {
            console.log(`Checking ${environment} for failed deployments...`);
            
            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: environment,
              per_page: 10
            });
            
            for (const deployment of deployments.data) {
              const statuses = await github.rest.repos.listDeploymentStatuses({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id
              });
              
              const latestStatus = statuses.data[0];
              
              if (latestStatus && latestStatus.state === 'failure') {
                await github.rest.repos.createDeploymentStatus({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id,
                  state: 'inactive',
                  description: 'Failed deployment marked inactive by cleanup'
                });
                
                console.log(`Marked failed deployment ${deployment.id} in ${environment} as inactive`);
              }
            }
          }