name: 'Setup Python Environment'
description: 'Set up Python with caching and install dependencies'
inputs:
  python-version:
    description: 'Python version to use'
    required: true
    default: '3.11'
  install-dev:
    description: 'Install development dependencies'
    required: false
    default: 'true'
  cache-key-prefix:
    description: 'Cache key prefix'
    required: false
    default: 'pip'

runs:
  using: "composite"
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    
    - name: Get pip cache directory
      id: pip-cache
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
        else
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
        fi
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-${{ inputs.cache-key-prefix }}-${{ inputs.python-version }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache-key-prefix }}-${{ inputs.python-version }}-
          ${{ runner.os }}-${{ inputs.cache-key-prefix }}-
    
    - name: Upgrade pip
      shell: bash
      run: |
        python -m pip install --upgrade pip setuptools wheel
    
    - name: Install package
      shell: bash
      run: |
        if [[ "${{ inputs.install-dev }}" == "true" ]]; then
          pip install -e ".[dev]"
        else
          pip install -e .
        fi
    
    - name: Display Python environment
      shell: bash
      run: |
        python --version
        pip --version
        pip list